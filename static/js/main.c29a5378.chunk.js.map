{"version":3,"sources":["components/cards/cards.js","components/card-list/card-list.js","components/search-box/search.js","App.js","reportWebVitals.js","index.js"],"names":["Cards","props","url","monster","id","className","src","alt","name","Cardlist","map","SearchBar","placeholder","changeHandler","type","onChange","App","e","setState","searchField","target","value","console","log","state","monsters","fetch","then","response","json","this","filtered","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAGaA,EAAO,SAACC,GACjB,IAAIC,EAAI,wBAAwBD,EAAME,QAAQC,GAAG,yBACjD,OACI,sBAAKC,UAAU,iBAAf,UAGA,qBAAKC,IAAKJ,EAAKK,IAAI,yBACnB,6BAAKN,EAAME,QAAQK,WCPdC,EAAU,SAAAR,GAEnB,OACI,qBAAKI,UAAU,YAAf,SAEMJ,EAAME,QAAQO,KAAI,SAAAP,GAAO,OAAG,cAAC,EAAD,CAAOA,QAASA,UCL7CQ,G,YAAU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,cACnC,OACQ,uBACAR,UAAU,SACVS,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC4BPG,E,kDAhCb,aAAc,IAAD,8BACX,gBAWFH,cAAc,SAACI,GAAM,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,QAAO,kBAAIC,QAAQC,IAAI,EAAKC,WAVnF,EAAKA,MAAQ,CACXC,SAAS,GACTN,YAAY,IAJH,E,qDAOb,WAAoB,IAAD,OACjBO,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAC,GAAQ,OAAG,EAAKV,SAAS,CAACO,SAASG,S,oBAG3C,WACC,IAAD,EAC+BE,KAAKN,MAA3BC,EADT,EACSA,SAASN,EADlB,EACkBA,YACVY,EAASN,EAASO,QAAO,SAAA7B,GAAO,OACpCA,EAAQK,KAAKyB,cAAcC,SAASf,EAAYc,kBAElD,OACE,sBAAK5B,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,CACAQ,cAAeiB,KAAKjB,cACpBD,YAAY,eAEZ,cAAC,EAAD,CAAUT,QAAS4B,W,GA3BTI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.c29a5378.chunk.js","sourcesContent":["import './card.styles.css';\r\nimport React from 'react';\r\n\r\nexport const Cards= (props)=>{\r\n    let url=\"https://robohash.org/\"+props.monster.id+\"?set=set2&size=180x180\";\r\n    return( \r\n        <div className=\"card-container\">\r\n            \r\n\r\n        <img src={url} alt=\"description of image\" ></img>\r\n        <h2>{props.monster.name}</h2>\r\n        </div>\r\n    );\r\n   \r\n}","import React from 'react';\r\nimport \"./card-list.css\"\r\nimport { Cards } from '../cards/cards'\r\nexport const Cardlist= props =>{\r\n\r\n    return (\r\n        <div className=\"card-list\">\r\n\r\n             {props.monster.map(monster=> <Cards monster={monster} ></Cards>)}\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport './search.css';\r\n\r\nexport const SearchBar=({ placeholder ,changeHandler})=>{\r\n    return(\r\n            <input\r\n            className='search'\r\n            type=\"search\"\r\n            placeholder={placeholder}\r\n            onChange={changeHandler}\r\n            />\r\n          );\r\n}","import React, { Component} from 'react';\nimport { Cardlist } from './components/card-list/card-list'\nimport './App.css'\nimport {SearchBar} from './components/search-box/search'\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters:[],\n      searchField:\"\"\n    }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response =>response.json())\n    .then(response =>this.setState({monsters:response}))\n  }\n  changeHandler=(e)=> {this.setState({searchField:e.target.value},()=>console.log(this.state))}\n  render()\n  {\n    const {monsters,searchField}=this.state;\n    const filtered=monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n    return(\n      <div className=\"App\">\n        <h1>Robo Finder</h1>\n        <SearchBar\n        changeHandler={this.changeHandler}\n        placeholder=\"Search....\"\n        />\n        <Cardlist monster={filtered}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}